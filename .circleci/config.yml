version: 2.1
orbs:
  slack: circleci/slack@4.8.3

executors:
  jdk-8:
    docker:
      - image: cimg/openjdk:8.0.322
    working_directory: ~/repo

jobs:
  branches:
    executor: jdk-8
    steps:
      - checkout

      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
            - m2-

      - save_cache:
          key: m2-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

      - run: mvn clean package -P branches,unit-tests

      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

  develop:
    executor: jdk-8
    steps:
      - checkout

      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
            - m2-

      - save_cache:
          key: m2-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

      - run: mvn clean package -P unit-tests,sources

      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

  rc:
    executor: jdk-8
    steps:
      - checkout

      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
            - m2-

      - save_cache:
          key: m2-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

      - run: mvn clean package -P unit-tests,integration-tests,sources

      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: basic_success_1

  tag:
    executor: jdk-8
    steps:
      - checkout

      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
            - m2-

      - save_cache:
          key: m2-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

      - run: mvn clean package -P sources,javadoc

      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1

  deploy:
    executor: jdk-8
    steps:
      - checkout

      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}
            - m2-

      - attach_workspace:
          at: .

      - run: echo -e $GPG_KEY | gpg --import --no-tty --batch --yes

      - run: mvn deploy -s .circleci/settings.xml -P sources,javadoc -DskipTest=true

      - slack/notify:
          event: fail
          template: basic_fail_1
      - slack/notify:
          event: pass
          custom: |
              {
                "text": "CircleCI job succeeded!",
                "blocks": [
                  {
                    "type": "header",
                    "text": {
                      "type": "plain_text",
                      "text": "Deployment Successful! :tada:",
                      "emoji": true
                    }
                  },
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Project*: $CIRCLE_PROJECT_REPONAME"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*When*: $(date +'%m/%d/%Y %T')"
                      },
                    ],
                    "accessory": {
                      "type": "image",
                      "image_url": "https://assets.brandfolder.com/otz5mn-bw4j2w-6jzqo8/original/circle-logo-badge-black.png",
                      "alt_text": "CircleCI logo"
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "View Job"
                        },
                        "url": "${CIRCLE_BUILD_URL}"
                      }
                    ]
                  }
                ]
              }

workflows:
  version: 2
  branches:
    jobs:
      - branches:
          filters:
            branches:
              ignore:
                - /rc-.*/
                - develop
                - master
  release-candidate:
    jobs:
      - rc:
          filters:
            branches:
              only:
                - /rc-.*/
      - deploy:
          requires:
            - rc
  develop:
    jobs:
      - develop:
          filters:
            branches:
              only:
                - develop
      - deploy:
          requires:
            - develop

  release:
    jobs:
      - tag:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - deploy:
          requires:
            - tag
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
